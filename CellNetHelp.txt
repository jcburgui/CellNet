
			HELP

   HELP CONTENTS
1. Introducing the CellNet simulator
2. Main window appearance
3. Main window menus
4. Games included into CellNet
5. References


1. Introducing the CellNet simulatorCellNet is a free to use open-source Java-based software for fast prototyping, developed by Juan C. Burguillo and licensed under the GNU Lesser General Public License (LGPL).

CellNet works in two modes: i) using a graphical user interface (GUI) for doing micro-simulations or ii) using a batch mode for doing macro-simulations. CellNet also provides support for: - Visualizing the whole set of cells and their state along each simulation iteration. - Visualizing the simulation results in real time. A set of graphical windows is provided for every relevant simulation result. - Importing network data to reuse particular network structures to run experiments. - Exporting network data, to save a particular network structure. The format used for the exported files is compatible with popular network analyzers such as Pajek or Gephi.


2. Main window appearance

On the left side of the figure appears the main window that provides a menu bar (described in Figs. 2-6), a control section on the left side with several buttons, a status bar with information at the bottom of the window, and the main grid full of coloured cells; which can be linked among them either spatially (as a lattice) or using any complex topology (small-world, scale free, random network, etc.).


3. Main window menus

The File menu contains with several items available to load/save the simulator state and topology. Besides it also allows to import/export the network topology to an external file in a format to be processed by external network tools (Pajek , Gephi , etc.).
The Game menu allows to execute the different games in CellNet.

The Options menu, which is in charge of providing access to the general configuration, the network parameters and the payoff matrix. These are the general configuration parameters that appear in independent windows to be configured. Besides, the Options menu also gives access to the particular parameters used to configure each individual game.

The Window menu gives access to several data graphical windows to present dynamically and on real time the data generated by the different simulator games. Every game normally uses a particular set of graphical windows, which are remarked with boldface letter.

The help menu gives access to search facilities, a CellNet Help item and the About item, which gives contact information and the present game version.


4. Games included into CellNet

CellNet provides a user-friendly access to several in-built games ready to be executed with a single mouse click. These games are shortly described next.
0. Game Social Groups: this simple game illustrates cell movement. There are two social groups of cells (green and black) over a blue background. Each cell tries to stay with similar cells of the same color, and in each generation it can randomly move around to find some group colleagues. After some generations cell types are clustered in the grid.1. Game LIFE & Coalition LIFE: this is the classical Conway’s Game of Life extended with coalitions in the way described in [1]. 2. Game Sat Ball: This simulation models a match between two teams that use a ball. The game is a template to explore simulations including cell movement and reinforcement learning.3. Game Iterated Prisoner’s Dilemma (IPD): this is a network version of the famous iterated prisoner’s dilemma, based in the model described in [1].4. Game Hawk-Dove-Possessor-Trader: this is a network version of the economic game model described in the book referenced at the end of this help window.5. Game Coalition IPD: This is a coalitional version of the IPD, based in the work described in [2].6. Game Coalition Indirect Reputation: This game models indirect reciprocity based on the model described in [1].7. Game Coalition Meta-norms: This is an experimental simulation based in the work described in [3], and extended in  collaboration with Samhar Mahmoud from King’s College London (KCL).8. Function Optimization: This is a simulation of the possibilities to use coalitional cellular networks in function optimization, following the model described in [1].9. Function Prediction: This is a simulation of the possibilities to use coalitional Self-organizing maps (CASOM) for Time Series Prediction (TSP), following the model described in [1].The first four games (0 to 3) are aimed to serve as development templates, showing several features available at the simulator. The rest of the games (4-9) correspond to models published as original work in international journals and conferences, and afterwards compiled and upgraded in [1].



5. References

[1] Self-organizing Coalitions for Managing Complexity by J.C. Burguillo. Springer ECC series (Emergence, Complexity and Computation 29). ©Springer International Publishing AG 2018. https://doi.org/10.1007/978-3-319-69898-4[2] Burguillo, J.C. (2009) A Memetic Framework for Describing and Simulating Spatial Prisoner's Dilemma with Coalition Formation. Eighth International Conference on Autonomous Agents and Multiagent Systems (AAMAS).

[3] Axelrod, R. (1986) An evolutionary approach to norms. American political science review, 80(4), 1095-1111.
